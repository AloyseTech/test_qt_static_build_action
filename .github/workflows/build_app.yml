name: Build Application

on:
  workflow_dispatch

jobs:
  GenerateWinStaticBinaries:
    runs-on: windows-2019

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
    - name: Install Python 3.7 version
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Install jom
      run: |
        Invoke-WebRequest http://download.qt.io/official_releases/jom/jom.zip -OutFile .\jom.zip
        expand-archive -path "jom.zip" -destinationpath "$HOME\jom"
        echo "::add-path::$HOME\jom"
        # echo "$HOME\jom" >> $GITHUB_PATH
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build_qt_static.yml
        run_id: 311466620
        name: qt5_5151_static_binaries_win.zip
        path: ..\
    - name: Extract static Qt version
      run: |
        expand-archive -path "..\qt5_5151_static_binaries_win.zip" -destinationpath "..\"
    - name: Build Application
      run: |
        cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat`" && set > %temp%\vcvars.txt"
        Get-Content "$env:temp\vcvars.txt" | Foreach-Object { if ($_ -match "^(.*?)=(.*)$") { Set-Content "env:\$($matches[1])" $matches[2] } }
        ..\Qt5_binaries\bin\qmake -r CONFIG+=static
        jom -j4
        dir
        7z a app-windows-static-x86_64.zip ./bin
    - name: Upload release on Github
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: app-windows-static-x86_64.zip
        asset_name: app-windows-static-x86_64.zip
